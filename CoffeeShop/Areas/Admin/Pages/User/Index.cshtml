@page
@model CoffeeShop.Areas.Admin.Pages.User.IndexModel
@{
    ViewData["Title"] = "User Management";
}
@*---style start here---*@
<style>
    .index {
        height: 100%;
        display: flex;
        flex-direction: column;
        justify-content: space-between;
        border-radius: 10px;
    }

    .dropdown-toggle::after {
        display: none;
    }
    .table-container{
        overflow-x: hidden;
    }

    .table-container::-webkit-scrollbar {
        width: 5px; /* Set scrollbar width */
    }

    .table-container::-webkit-scrollbar-thumb {
        background-color: rgba(0, 0, 0, 0.01); 
        border-radius: 4px; 
    }

    .table-container::-webkit-scrollbar-track {
        background-color: transparent; 
    }

    .table-container:hover::-webkit-scrollbar-thumb {
        background-color: rgba(0, 0, 0, 0.3); 
    }
</style>
@*---style end here---*@

<div class="shadow border-1 border p-2 index d-flex justify-content-between">

    <div class="h-auto overflow-scroll table-container">
        <h2 class="text-center">User Management</h2>
        <p>
            <a class="btn btn-outline-primary ms-2" asp-page="Create"> Add New User</a>
        </p>

        <table class="table shadow border h-auto border-top-0">
            <thead class="text-center">
                <tr>
                    <th>
                        Phone Number
                    </th>
                    <th>
                        UserName
                    </th>
                    <th>
                        Full Name
                    </th>
                    <th>
                        Account Type
                    </th>
                    <th>
                        Email
                    </th>
                    <th></th>
                </tr>
            </thead>
            <tbody class="text-center">
                @foreach (var item in Model.Users)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.PhoneNumber)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Username)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.FullName)
                        </td>
                        <td>
                            @switch (item.AccountType)
                            {
                                case 0:
                                    <span>Customer</span>
                                    break;
                                case 1:
                                    <span>Admin</span>
                                    break;
                                default: break;
                            }
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Email)
                        </td>
                        <td>
                            <div class="dropdown">
                                <button class="btn btn-sm btn-outline-secondary dropdown-toggle" type="button" id="dropdownMenuButton" data-bs-toggle="dropdown" aria-expanded="false">
                                    ...
                                </button>
                                <ul class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                                    <li><a class="dropdown-item text-success" asp-page="./Edit" asp-route-id="@item.UserID">Edit</a></li>
                                    <li><a class="dropdown-item text-dark" asp-page="./Details" asp-route-id="@item.UserID">Details</a></li>
                                    <li><a class="dropdown-item text-danger" asp-page="./Delete" asp-route-id="@item.UserID">Delete</a></li>
                                </ul>
                            </div>



                        </td>
                    </tr>
                }
            </tbody>
        </table>

    </div>
    <div class="d-flex justify-content-between align-items-center mb-1 ">
        <div>
            <span class="mr-2">Rows per page:</span>
            <select asp-items="@Model.PageSizeList" id="pageSizeSelector" class="rounded-3">
            </select>
        </div>
        <div>
            <nav aria-label="Page navigation">
                <ul class="pagination mb-0">
                    <li class="page-item @(!Model.Users.HasPreviousPage ? "disabled" : "")">
                        <a class="page-link"
                           asp-route-pageIndex="@(Model.Users.PageIndex-1)"
                           asp-route-pageSize="@Model.Users.PageSize">Previous</a>
                    </li>
                    @for (int i = 1; i <= Model.Users.TotalPages; i++)
                    {
                        <li class="page-item @(Model.Users.PageIndex == i ? "active" : "")">
                            <a class="page-link"
                               asp-route-pageIndex="@i"
                               asp-route-pageSize="@Model.Users.PageSize">@i</a>
                        </li>
                    }
                    <li class="page-item @(!Model.Users.HasNextPage ? "disabled" : "")">
                        <a class="page-link"
                           asp-route-pageIndex="@(Model.Users.PageIndex+1)"
                           asp-route-pageSize="@Model.Users.PageSize">Next</a>
                    </li>
                </ul>
            </nav>
        </div>
    </div>

</div>

@section Scripts
{
    <script>
        $(document).ready(function () {
            $('#pageSizeSelector').on('change', function () {
                var pageSize = $(this).val();
                // Reload the page with the pageSize parameter
                window.location.href = window.location.pathname + "?pageSize=" + pageSize;
            });

            //get the menu height then assign it to the index
            var navbarHeight = $('.custom-sidebar').outerHeight() + 'px';
            $('.index').css('height', navbarHeight);
        });

    </script>
}