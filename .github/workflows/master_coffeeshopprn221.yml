name: Build and deploy ASP.Net Core app to Azure Web App - CoffeeShopPRN221

on:
  push:
    branches:
      - '**'  # Chạy cho mọi nhánh push
  pull_request:
    branches:
      - '**'  # Chạy khi có Pull Request
  workflow_dispatch:  # Cho phép chạy thủ công

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4  # Checkout mã nguồn của bạn

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.x'  # Sử dụng .NET 8.x

      - name: Build with dotnet
        run: dotnet build --configuration Release  # Build ứng dụng

      - name: dotnet publish
        run: dotnet publish -c Release -o ${{env.DOTNET_ROOT}}/myapp  # Publish ứng dụng

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: .net-app  # Tên artifact
          path: ${{env.DOTNET_ROOT}}/myapp  # Đường dẫn của thư mục output

  analyze:
    runs-on: ubuntu-latest
    needs: build  # Job này chỉ chạy sau khi job build hoàn thành

    steps:
      - uses: actions/checkout@v4  # Checkout mã nguồn

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.x'

      - name: Install SonarScanner
        run: dotnet tool install --global dotnet-sonarscanner  # Cài SonarScanner

      - name: Run SonarCloud Analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}  # SonarCloud token
        run: |
          dotnet sonarscanner begin /k:"buule-cyper:BuuLe-cyper_CoffeeShopManager" /o:"buule-cyper" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
          dotnet build --configuration Release
          dotnet sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"  # Kết thúc phân tích

      # Kiểm tra trạng thái Quality Gate của SonarCloud
      - name: Wait for SonarCloud Quality Gate
        uses: SonarSource/sonarcloud-github-action@v1
        with:
          sonar-token: ${{ secrets.SONAR_TOKEN }}
        continue-on-error: false

  deploy:
    runs-on: ubuntu-latest
    needs: [build, analyze]  # Chạy sau khi build và analyze hoàn thành
    if: github.ref == 'refs/heads/master' && success()  # Chỉ deploy khi push vào nhánh master và thành công

    environment:
      name: 'Production'  # Tên môi trường sản xuất
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}  # URL của webapp

    permissions:
      id-token: write  # Cần quyền này để yêu cầu JWT

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: .net-app  # Tải artifact từ job build

      - name: Login to Azure
        uses: azure/login@v2  # Đăng nhập vào Azure
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_FF1176CCCAF247EAA05A7BD77E8E0CB6 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_4E764DA75DE14606AE7DE8754E8D2FBC }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_52CEA70969B84CE1B50AA3099182C6ED }}

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3  # Sử dụng Azure Web App deploy action
        with:
          app-name: 'CoffeeShopPRN221'  # Tên của ứng dụng trên Azure
          slot-name: 'Production'  # Slot sản xuất
          package: ${{ env.DOTNET_ROOT }}/myapp  # Đường dẫn tới package đã build
